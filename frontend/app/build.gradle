plugins {
    id 'com.android.application'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.recipez"
        minSdk 29
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'com.android.volley:volley:1.2.1'
    def fragment_version = "1.4.1"
    implementation "androidx.fragment:fragment:$fragment_version"
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'com.google.android.gms:play-services-auth:20.2.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.gms:play-services-base:18.0.1'
    implementation 'com.squareup.picasso:picasso:2.8'
    implementation 'androidx.multidex:multidex:2.0.1'

    implementation platform('com.google.firebase:firebase-bom:30.2.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-messaging'
    implementation "androidx.core:core:1.6.0"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

task wrapper(type: Wrapper) {
    gradleVersion = '7.2'
}

task prepareKotlinBuildScriptModel {

}